name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  IMAGE_NAME: python-app-gh

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        python -m venv venv
        . venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage

    - name: Run tests with coverage
      run: |
        export TEST_ENV=true
        . venv/bin/activate
        coverage run -m unittest discover tests/

    - name: Generate coverage report
      run: |
        . venv/bin/activate
        coverage xml

    - name: Clean __pycache__ and .pyc files
      run: |
        find . -name "*.pyc" -exec rm -f {} + || true
        find . -name "__pycache__" -exec rm -rf {} + || true


    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: SonarQube Quality Gate check
      uses: sonarsource/sonarqube-quality-gate-action@master
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: leonardozwirtes/${{ env.IMAGE_NAME }}:v1.0.${{ github.run_number }}

    - name: Repository Dispatch
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.TOKEN_REPO_PYTHON }}
        repository: leozw/poc-opentelemetry-python/deploy-app
        event-type: new-image
        client-payload: '{"image": "leonardozwirtes/${{ env.IMAGE_NAME }}:v1.0.${{ github.run_number }}"}' 
